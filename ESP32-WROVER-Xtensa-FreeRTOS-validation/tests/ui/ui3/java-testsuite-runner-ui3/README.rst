MicroEJ UI Validation
=====================

Overview
--------

This project contains test cases aimed at validating the correct runtime execution 
of UI Pack on a MicroEJ Platform connected to a Board Support Package (BSP).
 
Tests are written as JUnit test cases, thus the main entry point is automatically generated by MicroEJ SDK.

Tests can be launched:

-  as a standard Application by using a `local launcher<Launcher Mode>`_.
-  as a Platform Test Suite by `building the module<Platform Test Suite Mode>`_.

Requirements
------------

-  MicroEJ SDK version ``5.1.0`` (included in MicroEJ SDK dist. ``19.05``).
-  MicroEJ Platform built from a MicroEJ UI Pack version ``13.0.0`` or higher.
-  See Platform Test Suites `documentation <../../README.rst>`_.

Usage
-----

Launcher Mode
~~~~~~~~~~~~~

In MicroEJ SDK,

-  Select ``Run > Run Configurations...``. A launcher named
   ``java-testsuite-runner-ui3`` should be available under
   ``MicroEJ Application``.
   
-  In ``Execution`` tab, select the target MicroEJ Platform.

-  Click on ``Run`` button to compile the MicroEJ Application.

-  Link the BSP project with the MicroEJ Application (``microejapp.o``), 
   the MicroEJ Platform runtime (``microejruntime.a``) and the MicroEJ Platform header files (``*.h``).

-  See below for an output example

::

    *****************************************************************************************************
    *                                  MicroEJ UI Validation - 1.0.0                                  *
    *****************************************************************************************************
    * Copyright 2021-2022 MicroEJ Corp. All rights reserved.                                            *
    * Use of this source code is governed by a BSD-style license that can be found with this software.  *
    *****************************************************************************************************
    
    -> Check LCD tearing: full screen (LLUI_DISPLAY_IMPL_flush validation)...
    Property 'com.microej.ui.tests.clock.seconds' is not set (default to '10' second(s))
    OK: testTearingFullScreen
    -> Check LCD tearing: black band (LLUI_DISPLAY_IMPL_flush validation)...
    Property 'com.microej.ui.tests.clock.seconds' is not set (default to '10' second(s))
    OK: testTearingVerticalBand
    Property 'com.microej.ui.tests.flush.tolerance.us' is not set (default to '200' us)
    LCD framerate time is 17528 us (57.051579 Hz)
    Retrieve the maximal drawing time (this will take several seconds)...
    The flush time is 7.708000 us
    To have an animation at 57.051579 Hz, the drawing time cannot be higher than 9.820000 ms.
    To have an animation at 28.525789 Hz, the drawing time cannot be higher than 27.348000 ms.
    To have an animation at 19.017193 Hz, the drawing time cannot be higher than 44.875999 ms.
    OK: testDrawingTime
    OK: testBackBufferRestore
    flush time (several iterations): 0
    wait flush time (several iterations): 295
    OK: testFlushTime
    PASSED: 5

Platform Test Suite Mode
~~~~~~~~~~~~~~~~~~~~~~~~

-  In MicroEJ SDK, import the ``java-testsuite-runner-ui3`` project in your workspace.

-  Follow the configuration and execution steps described in Platform Test Suites `documentation <../../README.rst>`_.

Tests Suite Description
-----------------------

All tests can be run in one step: all tests will be executed one by one
and are run in a specific order, *next one* expects *previous one* is
passed.

Tearing
~~~~~~~

A tearing effect (flickering) visible on LCD indicates a synchronization issue with
the LCD tearing signal (TE).

* "Full screen" test toggles black and white screens. If the flush job is properly synchronized and quite
fast, the LCD is gray. The LCD being cut in multiple parts indicates a synchronization issue of the flush job.
* "Black band" test moves a black band on a white background. The band being cut in multiple parts indicates a synchronization issue of the flush job.

Drawing Time
~~~~~~~~~~~~

"Drawing time" test determinates the maximum drawing time (in milliseconds) for a given
framerate. The possible framerates depend on the LCD and on the post-flush copy step. When the
drawing time exceeds the maximum drawing time, the framerate is divided by two when the flush
job is synchronized on LCD tearing signal.

Back Buffer Restore
~~~~~~~~~~~~~~~~~~~

This test is useful when the implementation of ``LLUI_DISPLAY_IMPL_flush`` uses the  `SWITCH mode <https://docs.microej.com/en/latest/PlatformDeveloperGuide/uiDisplay.html#switch>`_.
In that case, after each call to ``LLUI_DISPLAY_IMPL_flush``, the implementation has to copy the content of the new frame buffer in the new back buffer before calling ``LLUI_DISPLAY_flushDone`` (post-flush-copy).
The MicroUI Graphics Engine automatically waits this signal before performing the next application drawing.
This copy is often performed by a hardware DMA.

If the copy is not performed or if the MicroUI Graphics Engine is notified too early (before or during the copy), this test fails: the new back buffer content does not contain the previous drawing.

This test may fail because the display is round or has irrelevant pixels in the corners. In this case, please set the ``area.offset`` property to avoid unwanted areas of the frame buffer.
This property can be set in a file `System.properties.list` with the prefix ``com.microej.ui.tests.``. For example ``com.microej.ui.tests.area.offset=30``.

Flush Time
~~~~~~~~~~

The implementation of the function ``LLUI_DISPLAY_IMPL_flush`` must be as fast as possible: it is not a blocking function (see function specification).
The implementation has to launch a third-party process (software task or hardware process) to perform the operation and returns.
Once the third-party process has finished, the callback has to call the function ``LLUI_DISPLAY_flushDone``.

This test checks that the implementation of ``LLUI_DISPLAY_IMPL_flush`` is not a blocking function.

Dependencies
------------

*All dependencies are retrieved transitively by MicroEJ Module Manager*.

Source
------

N/A

Restrictions
------------

None.

..
    Copyright 2021-2023 MicroEJ Corp. All rights reserved.
    Use of this source code is governed by a BSD-style license that can be found with this software.


